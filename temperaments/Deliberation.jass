struct Deliberation extends array
	private static constant real MODIFIER = 0.35
	private static constant real TIME_TICK = 0.1*MODIFIER
	private static constant string TOOLTIP = "% of the time spent after standing still for over " 
	private static constant string TOOLTIP2 = " seconds"
	private static constant string SECONDARY_TOOLTIP = " after standing still for at least " 
	private static constant string SECONDARY_TOOLTIP2 = " seconds."
    private HeroData h
	boolean is_primary
	real prev_x
	real prev_y
	real time_standing_still
	
	public static method initialize takes HeroData this, boolean isprimary returns nothing
        if 0==h then
            set .h = this
            set prev_x = h.x
            set prev_y = h.y
            set time_standing_still = 0
            if isprimary then
				set h.fulfillment_percentage1 = "35"
				set h.tooltip1 = TOOLTIP + "5" + TOOLTIP2
				set h.tooltip2 = "."
				set h.hidden_tooltip = SECONDARY_TOOLTIP + "5" + SECONDARY_TOOLTIP2
			elseif h.deprivation != 1 then
				set h.fulfillment_percentage2 = "35"
				set h.tooltip2 = SECONDARY_TOOLTIP + "4" + SECONDARY_TOOLTIP2
			else
				set h.fulfillment_percentage1 = "35"
				set h.tooltip1 = TOOLTIP + "7.5" + TOOLTIP2 + Deprivation.TOOLTIP_ADDENDUM
				call h.modPow(-2)
			endif
			set is_primary = isprimary
			set h.deprived_tooltip = deprivedTooltip
        endif
    endmethod

	static method deprivedTooltip takes HeroData this returns nothing
		if h.deprivation != 0 then
			set h.fulfillment_percentage1 = "35"
			set h.tooltip1 = TOOLTIP + "7.5" + TOOLTIP2
		else
			set h.fulfillment_percentage1 = "35"
			set h.tooltip1 = TOOLTIP + "5" + TOOLTIP2
			set h.tooltip2 = "."
		endif
	endmethod
	
	static method callDestroy takes HeroData this returns nothing
		call destroy()
	endmethod
	method destroy takes nothing returns nothing
		if is_primary then
			set h.tooltip1 = ""
		elseif h.deprivation != 1 then
			set h.tooltip2 = "."
		else
			set h.tooltip1 = Deprivation.TOOLTIP
			call h.modPow(2)
		endif
		set h = 0
	endmethod
	
	static method check takes HeroData this returns real
		if prev_x == h.x and prev_y == h.y then
			set time_standing_still = time_standing_still + 0.1
			if h.deprivation == 0 then
				if is_primary then
					if time_standing_still > 4.9 then
						set prev_x = h.x
						set prev_y = h.y
						return TIME_TICK
					endif
				elseif time_standing_still > 3.9 then
					set prev_x = h.x
					set prev_y = h.y
					return TIME_TICK
				endif
			elseif time_standing_still > 7.4 then
				set prev_x = h.x
				set prev_y = h.y
				return TIME_TICK
			endif
		else
			set time_standing_still = 0
			set prev_x = h.x
			set prev_y = h.y
			return 0.0
		endif
		return 0.0
    endmethod
endstruct