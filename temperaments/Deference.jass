struct Deference extends array
	private static constant real DEPRIVED_MODIFIER = .25
	private static constant real PRIMARY_MODIFIER = .4
	private static constant real SECONDARY_MODIFIER = .5
	private static constant string TOOLTIP = "% of the time any other hero fulfills all their conditions (split amongst all instances of Deference)"
	private static constant string SECONDARY_TOOLTIP = " while any other hero is fulfilling all their conditions (split amongst all instances of Deference)."
    static integer instance_count = 0
	static integer array deference_array
	integer index
	private HeroData h
	boolean is_primary
	real time_pool
	
	public static method initialize takes HeroData this, boolean isprimary returns nothing
        if 0==h then
            set .h = this
			set deference_array[instance_count] = this
			set index = instance_count
			set instance_count = instance_count + 1
			
			if isprimary then
				set h.fulfillment_percentage1 = "40"
				set h.tooltip1 =  TOOLTIP
				set h.tooltip2 = "."
				set h.hidden_tooltip = SECONDARY_TOOLTIP
			elseif h.deprivation != 1 then
				set h.fulfillment_percentage2 = "50"
				set h.tooltip2 = SECONDARY_TOOLTIP
			else
				set h.fulfillment_percentage1 = "25"
				set h.tooltip1 = TOOLTIP + Deprivation.TOOLTIP_ADDENDUM
				call h.modPow(-2)
			endif
			set is_primary = isprimary
			set h.deprived_tooltip = deprivedTooltip
        endif
    endmethod

	static method deprivedTooltip takes HeroData this returns nothing
		if h.deprivation != 0 then
			set h.fulfillment_percentage1 = "25"
			set h.tooltip1 = TOOLTIP
		else
			set h.fulfillment_percentage1 = "40"
			set h.tooltip1 = TOOLTIP
			set h.tooltip2 = "."
		endif
	endmethod
	
	static method callDestroy takes HeroData this returns nothing
		call destroy()
	endmethod
	method destroy takes nothing returns nothing
		set instance_count = instance_count-1
		set deference_array[index] = deference_array[instance_count]
		if is_primary then
			set h.tooltip1 = ""
		elseif h.deprivation != 1 then
			set h.tooltip2 = "."
		else
			set h.tooltip1 = Deprivation.TOOLTIP
			call h.modPow(2)
		endif
		set h = 0
	endmethod
	
	static method check takes HeroData this returns real
		local real tp = time_pool
		if time_pool < 0.1 then
			set time_pool = 0
			set deference_real_estate = deference_real_estate - tp
			return tp
		else
			set time_pool = time_pool - 0.1
			set deference_real_estate = deference_real_estate - 0.1
			return 0.1
		endif
    endmethod
	
	static method realEstate takes nothing returns nothing
		local thistype this
		local real deference_split
		local integer i = 0
		if instance_count > 0 and deference_real_estate > 0 then
			set deference_split = deference_real_estate / instance_count
			loop
				set this = deference_array[i]
				if h.deprivation == 0 then
					if is_primary then
						set time_pool = time_pool + deference_split*PRIMARY_MODIFIER
					else
						set time_pool = time_pool + deference_split*SECONDARY_MODIFIER
					endif
				else
					set time_pool = time_pool + deference_split*DEPRIVED_MODIFIER
				endif

				set i = i+1
				exitwhen i == instance_count
			endloop
		endif
		set deference_real_estate = 0
	endmethod

endstruct