struct Divergence extends array
	private static constant real MODIFIER = 0.15
	private static constant real TICK_RATE = 0.1
	private static constant real TIME_TICK = TICK_RATE * MODIFIER
	private static constant string TOOLTIP = "% of the time spent staying "
	private static constant string TOOLTIP2 = " range away from any allies"
	private static constant string SECONDARY_TOOLTIP = " while staying "
	private static constant string SECONDARY_TOOLTIP2 = " range away from any allies."
	private static constant integer PRIMARY_RADIUS = 800
	private static constant integer SECONDARY_RADIUS = 640
	private static constant integer DEPRIVED_RADIUS = 1200
    private HeroData h
	boolean is_primary
	
	public static method initialize takes HeroData this, boolean isprimary returns nothing
        if 0==h then
            set .h = this
            set is_primary = isprimary
			if isprimary then
				set h.fulfillment_percentage1 = "15"
				set h.tooltip1 = TOOLTIP + I2S(PRIMARY_RADIUS) + TOOLTIP2
				set h.tooltip2 = "."
				set h.hidden_tooltip = SECONDARY_TOOLTIP + I2S(PRIMARY_RADIUS) + SECONDARY_TOOLTIP2
			elseif h.deprivation != 1 then
				set h.fulfillment_percentage2 = "15"
				set h.tooltip2 = SECONDARY_TOOLTIP + I2S(SECONDARY_RADIUS) + SECONDARY_TOOLTIP2
			else
				set h.fulfillment_percentage1 = "15"
				set h.tooltip1 = TOOLTIP + I2S(DEPRIVED_RADIUS) + TOOLTIP2 + Deprivation.TOOLTIP_ADDENDUM
				call h.modPow(-2)
			endif
            set is_primary = isprimary
            set h.deprived_tooltip = deprivedTooltip
        endif
    endmethod

	static method deprivedTooltip takes HeroData this returns nothing
		if h.deprivation != 0 then
			set h.fulfillment_percentage1 = "15"
			set h.tooltip1 = TOOLTIP + I2S(DEPRIVED_RADIUS) + TOOLTIP2
		else
			set h.fulfillment_percentage1 = "15"
			set h.tooltip1 = TOOLTIP + I2S(PRIMARY_RADIUS) + TOOLTIP2
			set h.tooltip2 = "."
		endif
	endmethod
	
	static method callDestroy takes HeroData this returns nothing
		call destroy()
	endmethod
	method destroy takes nothing returns nothing
		set h = 0
		if is_primary then
			set h.tooltip1 = ""
		elseif h.deprivation != 1 then
			set h.tooltip2 = "."
		else
			set h.tooltip1 = Deprivation.TOOLTIP
			call h.modPow(2)
		endif
	endmethod
    
    static method check takes HeroData this returns real
		local unit fog
		if h.deprivation == 0 then
			if is_primary then
				call GroupEnumUnitsInRange(grp, h.x, h.y, 800, null)
			else
				call GroupEnumUnitsInRange(grp, h.x, h.y, 640, null)
			endif
		else
			call GroupEnumUnitsInRange(grp, h.x, h.y, 1200, null)
		endif
		loop
			set fog = FirstOfGroup(grp)
			exitwhen null==fog
			if fog!=h.hero and IsUnitAlly(fog, h.owner) and UnitAlive(fog) then
				set fog = null
				call GroupClear(grp)
				return 0.0
			endif
			call GroupRemoveUnit(grp, fog)
		endloop
		return TIME_TICK
    endmethod
endstruct